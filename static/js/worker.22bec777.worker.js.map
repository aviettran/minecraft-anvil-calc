{"version":3,"file":"static/js/worker.22bec777.worker.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","utils/item.ts","utils/helpers.ts","utils/worker.ts"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import enchantments from \"../data/enchantments.json\";\nimport { levelToExperience } from \"../utils/helpers\";\nimport itemSpecifications from \"../data/items.json\";\nimport { Enchantment, EnchantmentSpecification, ItemData, ItemSpecification, Settings, StepData } from \"../models\";\n\nconst getEnchantments = (item: string) => {\n  return enchantments.filter((enchantment) =>\n    enchantment.applies_to.some((possible_item) => possible_item === item)\n  );\n};\n\nconst getItemData = (item: ItemData) => {\n  const new_item: ItemData = { ...item };\n  new_item.enchantments = new_item.enchantments.map((enchantment) => {\n    return {\n      ...enchantment,\n      specification: (enchantments as Array<EnchantmentSpecification>).find(\n        (enchantment_data) => enchantment_data.name === enchantment.name\n      ),\n    };\n  });\n  return new_item;\n};\n\n//If the box is checked on preserve enchantment, the end result must contain it\nconst areEnchantmentsPreserved = (\n  sacrificedItemEnchantments: Array<Enchantment>,\n  filtered_enchantments: Array<Enchantment>\n) => {\n  const removedEnchantments = sacrificedItemEnchantments.filter(\n    (sacrificed_enchantment) =>\n      !filtered_enchantments.includes(sacrificed_enchantment)\n  );\n  return !removedEnchantments.some(\n    (removed_enchantment) => removed_enchantment.preserve\n  );\n};\n\nconst checkEnchantmentIsCompatible = (targetItem: ItemData, newEnchantment: EnchantmentSpecification) => {\n  return (\n    // There isn't an existing enchantment in a mutal exclusion group\n    !targetItem.enchantments.some(\n      (some_enchantment) =>\n        some_enchantment.specification &&\n        some_enchantment.name !== newEnchantment.name &&\n        some_enchantment.specification.group &&\n        newEnchantment.group &&\n        some_enchantment.specification.group === newEnchantment.group &&\n        !(\n          some_enchantment.specification.group_exception &&\n          newEnchantment.group_exception &&\n          some_enchantment.specification.group_exception === newEnchantment.group_exception\n        ) // Rule exception for tridents\n    ) &&\n    //Possible enchantment is applicable to the given item\n    (newEnchantment.applies_to.some(\n      (some_item) => some_item === targetItem.name\n    ) ||\n      targetItem.name === \"book\")\n  );\n};\n\nconst getMultiplier = (item: ItemData, enchantmentSpecification: EnchantmentSpecification, isJavaEdition: boolean): number => {\n  if (isJavaEdition) {\n    return item.name === \"book\"\n      ? (enchantmentSpecification.java_overrides?.book_multiplier ?? enchantmentSpecification.book_multiplier)\n      : (enchantmentSpecification.java_overrides?.item_multiplier ?? enchantmentSpecification.item_multiplier);\n  }\n  return item.name === \"book\"\n    ? enchantmentSpecification.book_multiplier\n    : enchantmentSpecification.item_multiplier;\n}\n\nconst mergeEnchantments = (\n  sacrificeItem: ItemData,\n  targetEnchantments: Array<Enchantment>,\n  sacrificeEnchantments: Array<Enchantment>, //mutable\n  settings: Settings\n) => {\n  return sacrificeEnchantments.reduce(\n    (mergeResults, sacrificeEnchantment) => {\n      if (!sacrificeEnchantment.specification) {\n        throw 'Error: no specification for Enchantment.';\n      }\n\n      const multiplier = getMultiplier(sacrificeItem, sacrificeEnchantment.specification, settings.java_edition);\n\n      // Find if target already has enchantment\n      const matchedEnchantment = mergeResults.resultingEnchantments.find(\n        (resultingEnchantment) =>\n          resultingEnchantment.name === sacrificeEnchantment.name\n      );\n      let newLevel = sacrificeEnchantment.level;\n      // Enchantment matched. Check Level.\n      if (matchedEnchantment) {\n        // Make a copy of the matched enchantment.\n        const newMatchedEnchantment: Enchantment = { ...matchedEnchantment };\n        let levelDifference =\n          sacrificeEnchantment.level - newMatchedEnchantment.level;\n        // Levels are the same. Bump level.\n        if (\n          levelDifference === 0 &&\n          newMatchedEnchantment.specification &&\n          newMatchedEnchantment.specification.max_level > newMatchedEnchantment.level\n        ) {\n          levelDifference += 1;\n          newLevel += 1;\n        }\n        if (levelDifference > 0) {\n          mergeResults.cost += settings.java_edition\n            ? 0\n            : levelDifference * multiplier;\n          newMatchedEnchantment.level = newLevel;\n          // Remove old enchantment and replace with new copy\n          mergeResults.resultingEnchantments = [\n            ...mergeResults.resultingEnchantments.filter(\n              (filtered_enchantment) =>\n                filtered_enchantment.name !== newMatchedEnchantment.name\n            ),\n            newMatchedEnchantment,\n          ];\n        }\n        // If Java Edition, cost is always just multiplier * new level\n        mergeResults.cost += settings.java_edition ? newLevel * multiplier : 0;\n      } else {\n        // New enchantment. Add.\n        mergeResults.resultingEnchantments = [\n          ...mergeResults.resultingEnchantments,\n          sacrificeEnchantment,\n        ];\n        mergeResults.cost += newLevel * multiplier;\n      }\n      return mergeResults;\n    },\n    { cost: 0, resultingEnchantments: [...targetEnchantments] }\n  );\n};\n\nexport interface AnvilResults {\n  resultingItem: ItemData;\n  cost: number;\n  exp: number;\n  steps: {\n    targetItem: ItemData;\n    sacrificeItem: ItemData;\n    resultingItem: ItemData;\n    stepCost: number;\n  }[]\n}\n\ninterface AnvilError {\n  error: boolean,\n  status: string\n}\n\nexport function instanceOfAnvilError(result: AnvilResults | AnvilError): result is AnvilError {\n  return 'error' in result;\n}\n\nconst anvil = (targetItem: ItemData, sacrificeItem: ItemData, settings: Settings): AnvilResults | AnvilError => {\n  const targetPenalty = targetItem.penalty || 0;\n  const sacrificePenalty = sacrificeItem.penalty || 0;\n  // Filter non-applicable enchantments\n  const filtered_enchantments = sacrificeItem.enchantments.filter(\n    (enchantment) => enchantment.specification && checkEnchantmentIsCompatible(targetItem, enchantment.specification)\n  );\n  if (\n    !areEnchantmentsPreserved(sacrificeItem.enchantments, filtered_enchantments)\n  ) {\n    return { error: true, status: \"Preserved enchantments have been lost\" };\n  }\n  const mergeResults = mergeEnchantments(\n    sacrificeItem,\n    targetItem.enchantments,\n    filtered_enchantments,\n    settings\n  );\n  const resultingItem: ItemData = {\n    ...targetItem,\n    enchantments: mergeResults.resultingEnchantments,\n  };\n  const stepCost =\n    mergeResults.cost +\n    Math.pow(2, targetPenalty) -\n    1 +\n    Math.pow(2, sacrificePenalty) -\n    1 +\n    (settings.java_edition\n      ? sacrificeItem.enchantments.length - filtered_enchantments.length // JE only: add 1 per non-applicable enchantment\n      : 0);\n  resultingItem.penalty = Math.max(targetPenalty, sacrificePenalty) + 1;\n  const results = {\n    resultingItem: resultingItem,\n    cost: stepCost,\n    exp: levelToExperience(stepCost),\n    steps: [\n      {\n        targetItem: targetItem,\n        sacrificeItem: sacrificeItem,\n        resultingItem: resultingItem,\n        stepCost: stepCost,\n      },\n    ],\n  };\n  return results;\n};\n\nexport interface CombineItemsError {\n  targetItem: ItemData,\n  steps: Array<StepData>,\n  error: boolean,\n  status: string\n}\n\nexport function instanceOfCombineItemsError(result: AnvilResults | CombineItemsError): result is CombineItemsError {\n  return 'error' in result;\n}\n\nconst combineItems = (items: Array<ItemData>, settings: Settings): AnvilResults | CombineItemsError => {\n  items = items.map(getItemData);\n\n  //For each item, determine what can be combined into it, use anvil, then call combineItems with what remains\n  let allResults: Array<AnvilResults> = [];\n  items.forEach((targetItem) => {\n    const nonTargets = items.filter(\n      (sacrificeItem) => sacrificeItem !== targetItem\n    );\n    let eligibleItems = nonTargets.filter(\n      (sacrificeItem) =>\n        sacrificeItem.name === \"book\" || targetItem.name !== \"book\"\n    );\n\n    if (eligibleItems.length > 0) {\n      //Optimize - if book -> book, choose cheapest book\n      if (targetItem.name === \"book\") {\n        eligibleItems = [\n          eligibleItems.reduce((cheapestBook, item) => {\n            return mergeEnchantments(\n              item,\n              targetItem.enchantments,\n              item.enchantments,\n              settings\n            ).cost <\n              mergeEnchantments(\n                cheapestBook,\n                targetItem.enchantments,\n                cheapestBook.enchantments,\n                settings\n              ).cost\n              ? item\n              : cheapestBook;\n          }, eligibleItems[0]),\n        ];\n      }\n      //For each eligible item\n      eligibleItems.forEach((sacrificeItem) => {\n        let anvilResults = anvil(targetItem, sacrificeItem, settings);\n        //Constraint violated in anvil call; return\n        if ((instanceOfAnvilError(anvilResults)) && anvilResults.error) {\n          return;\n        }\n        anvilResults = anvilResults as AnvilResults;\n        const remaining_items = nonTargets.filter(\n          (item) => item !== sacrificeItem\n        );\n\n        if (remaining_items.length > 0) {\n          const remaining_items_results = combineItems(\n            [anvilResults.resultingItem, ...remaining_items],\n            settings\n          );\n\n          //Error found in the recursive call means that a constraint was violated; return\n          if (instanceOfCombineItemsError(remaining_items_results)) {\n            return;\n          }\n\n          anvilResults.resultingItem = remaining_items_results.resultingItem;\n          anvilResults.cost += remaining_items_results.cost;\n          anvilResults.exp += remaining_items_results.exp;\n          anvilResults.steps = [\n            ...anvilResults.steps,\n            ...remaining_items_results.steps,\n          ];\n        }\n        allResults = [...allResults, anvilResults];\n      });\n    }\n  });\n\n  //Get the cheapest results\n  if (allResults.length > 0) {\n    return allResults.reduce((cheapestResults, singleResult) => {\n      return singleResult.exp < cheapestResults.exp\n        ? singleResult\n        : cheapestResults;\n    }, allResults[0]);\n  } else {\n    return {\n      targetItem: items[0],\n      steps: [],\n      error: true,\n      status: \"No items or items cannot be combined.\",\n    };\n  }\n};\n\nconst getDisplayName = (item_name: string) => {\n  const item_data = (itemSpecifications as Array<ItemSpecification>).find((find_item) => find_item.name === item_name);\n  return item_data ? item_data.display_name : null;\n};\n\nexport {\n  getEnchantments,\n  getItemData,\n  areEnchantmentsPreserved,\n  checkEnchantmentIsCompatible,\n  mergeEnchantments,\n  anvil,\n  combineItems,\n  getDisplayName,\n};\n","import enchantments from \"../data/enchantments.json\";\n\nconst numToNumeral = (num: number) => {\n  switch (num) {\n    case 1:\n      return \"I\";\n    case 2:\n      return \"II\";\n    case 3:\n      return \"III\";\n    case 4:\n      return \"IV\";\n    case 5:\n      return \"V\";\n    default:\n      return \"Numeral Error\";\n  }\n};\n\nconst levelToExperience = (level: number) => {\n  if (level < 17) {\n    return Math.pow(level, 2) + 6 * level;\n  } else if (level < 31) {\n    return 2.5 * Math.pow(level, 2) - 40.5 * level + 360;\n  } else {\n    return 4.5 * Math.pow(level, 2) - 162.5 * level + 2220;\n  }\n};\n\nconst addIndexes = <A>(arrayToIndex: Array<A>) => {\n  return arrayToIndex.map((item, index) => {\n    return { ...item, index: index };\n  });\n};\n\nconst getEnchantmentDisplayName = (enchantment_name: string) => {\n  const enchantment_data = enchantments.find(\n    (find_enchantment) => find_enchantment.name === enchantment_name\n  );\n  return enchantment_data ? enchantment_data.display_name : null;\n};\n\nexport {\n  numToNumeral,\n  levelToExperience,\n  addIndexes,\n  getEnchantmentDisplayName,\n};\n","import { ItemData, Settings } from \"../models\";\nimport { combineItems } from \"./item\";\n\nexport interface CombineMessage { items: Array<ItemData>, settings: Settings }\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ctx: Worker = self as any;\n\nctx.addEventListener(\"message\", (event: MessageEvent<CombineMessage>) => {\n  ctx.postMessage(combineItems(event.data.items, event.data.settings));\n}\n);"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","getItemData","item","new_item","enchantments","map","enchantment","specification","enchantment_data","mergeEnchantments","sacrificeItem","targetEnchantments","sacrificeEnchantments","settings","reduce","mergeResults","sacrificeEnchantment","multiplier","enchantmentSpecification","isJavaEdition","java_overrides","book_multiplier","item_multiplier","getMultiplier","java_edition","matchedEnchantment","resultingEnchantments","find","resultingEnchantment","newLevel","level","newMatchedEnchantment","levelDifference","max_level","cost","filtered_enchantment","combineItems","items","allResults","targetItem","nonTargets","eligibleItems","cheapestBook","anvilResults","targetPenalty","penalty","sacrificePenalty","filtered_enchantments","newEnchantment","some","some_enchantment","group","group_exception","applies_to","some_item","checkEnchantmentIsCompatible","sacrificedItemEnchantments","sacrificed_enchantment","includes","removed_enchantment","preserve","areEnchantmentsPreserved","error","status","resultingItem","stepCost","Math","pow","max","exp","steps","anvil","remaining_items","remaining_items_results","result","instanceOfCombineItemsError","cheapestResults","singleResult","ctx","self","addEventListener","event","postMessage","data"],"sourceRoot":""}